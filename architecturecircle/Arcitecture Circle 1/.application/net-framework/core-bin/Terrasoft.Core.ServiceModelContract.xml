<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Terrasoft.Core.ServiceModelContract</name>
    </assembly>
    <members>
        <member name="M:Terrasoft.Core.ServiceModelContract.AppearanceSettings.Interfaces.IAppearanceSettingsService.GetAppearanceSettings(Terrasoft.Core.ServiceModelContract.AppearanceSettings.Modals.GetAppearanceSettingsRequest)">
            <summary>
            Return schema modal settings.
            </summary>
            <param name="request">Schema name</param>
            <returns>Return response with schema modal settings</returns>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.AppearanceSettings.Modals.GetAppearanceSettingsRequest.SchemaName">
            <summary>
            Schema name wich will be using timeline.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IApplicationService">
            <summary>
            Application service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IApplicationService.GetApplicationInfo">
            <summary>
            Gets application info.
            </summary>
            <returns>Application info response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IApplicationService.GetPackageHierarchyInfo">
            <summary>
            Gets package hierarchy info.
            </summary>
            <returns>Package hierarchy info response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IApplicationService.CanUseFreedomUI(System.String)">
            <summary>
            Returns true if the passed page should be opened in Freedom UI host.
            </summary>
            <param name="pageUrl">Page url.</param>
            <returns>Returns true if the passed page should be opened in Freedom UI host.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.StaticFileContentInfo">
            <summary>
            Data contract for StaticFileContentInfo.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.StaticFileContentInfo.SchemasRuntimePath">
            <summary>
            Schemas runtime path.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.StaticFileContentInfo.ResourcesRuntimePath">
            <summary>
            Resources runtime path.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.LookupValue`1">
            <summary>
            Data contract for LookupValue.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.LookupValue`1.Value">
            <summary>
            Lookup value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.LookupValue`1.DisplayValue">
            <summary>
            Lookup display value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.LookupWithCodeValue">
            <summary>
            Lookup with code value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.LookupWithCodeValue.CodeValue">
            <summary>
            Lookup code value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.LookupWithImageValue">
            <summary>
            Lookup with image value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.LookupWithImageValue.PrimaryImageValue">
            <summary>
            Lookup primary image value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.SysValuesDataContract">
            <summary>
            Data contract for SysValues.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SysValuesDataContract.User">
            <summary>
            Current user.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SysValuesDataContract.UserCulture">
            <summary>
            User culture.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SysValuesDataContract.PrimaryCulture">
            <summary>
            Primary culture.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SysValuesDataContract.PrimaryLanguage">
            <summary>
            Primary language.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SysValuesDataContract.UserContact">
            <summary>
            User contact.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SysValuesDataContract.UserTimezoneOffset">
            <summary>
            User time zone offset.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SysValuesDataContract.UserTimezoneCode">
            <summary>
            User time zone code.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SysValuesDataContract.UserAccount">
            <summary>
            User account.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SysValuesDataContract.Workspace">
            <summary>
            Workspace.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SysValuesDataContract.Maintainer">
            <summary>
            Maintainer.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SysValuesDataContract.MoneyDisplayPrecision">
            <summary>
            Money display precision.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SysValuesDataContract.MaxEntitySchemaNameLength">
            <summary>
            Max entity schema name length.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SysValuesDataContract.CoreVersion">
            <summary>
            Core version.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ApplicationInfo">
            <summary>
            Data contract for ApplicationInfo.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ApplicationInfo.ServiceUrl">
            <summary>
            Service url.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ApplicationInfo.ClientConnectionClassName">
            <summary>
            Client connection class name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ApplicationInfo.UseStaticFileContent">
            <summary>
            Use static file content.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ApplicationInfo.ConfigurationContentHash">
            <summary>
            Configuration content hash.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ApplicationInfo.StaticFileContentInfo">
            <summary>
            Static file content info.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ApplicationInfo.CoreModulesPath">
            <summary>
            Core modules path.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ApplicationInfo.SysValues">
            <summary>
            System values.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ApplicationInfoResponse">
            <summary>
            Data contract for ApplicationInfoResponse.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.PackageHierarchyInfoResponse">
            <summary>
            Data contract for PackageHierarchyInfoResponse.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.PackageHierarchyInfoResponse.PackageTopologicalOrder">
            <summary>
            Package topological order.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.Attributes.CoreServiceRouteAttribute">
            <summary>
            Provides a way to specify custom route for core service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.Attributes.CoreServiceRouteAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Attribute" /> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Attributes.CoreServiceRouteAttribute.Route">
            <summary>
            Custom route string.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.BaseResponse">
            <summary>
            Base class for service operation response.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.BaseResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse"/> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.BaseResponse.Success">
            <summary>
            The service response status.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.BaseResponse.ErrorInfo">
            <summary>
            Error object.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ErrorInfo">
            <summary>
            Base class for error response.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ErrorInfo.ErrorCode">
            <summary>
            Error code.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ErrorInfo.Message">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ErrorInfo.StackTrace">
            <summary>
            Stack trace.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ValueResponse`1">
            <summary>
            Response with a value of the specified type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ValueResponse`1.Value">
            <summary>
            Value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.BoolResponse">
            <summary>
            Response with boolean value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ObjectChangeLogSettings">
            <summary>
            Data contract for ObjectChangeLogSettings.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.TrackedColumn">
            <summary>
            Data contract for TrackedColumn.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ChangeLogRecord">
            <summary>
            Data contract for ChangeLogRecord.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ChangedColumn">
            <summary>
            Data contract for ChangedColumn.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ChangeLogPagingOptions">
            <summary>
            Data contract for ChangeLogPagingOptions.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ChangeLogFilters">
            <summary>
            Data contract for ChangeLogFilters.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ObjectChangeLogResponse">
            <summary>
            Data contract for ObjectChangeLogResponse.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.RecordChangeLogResponse">
            <summary>
            Data contract for RecordChangeLogResponse.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ObjectChangeLogSettingsResponse">
            <summary>
            Data contract for ObjectChangeLogSettingsResponse.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ChangeLogObjectsResponse">
            <summary>
            Data contract for ChangeLogObjectsResponse.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IClientUnitSchemaPathService">
            <summary>
            Client unit schema path service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IClientUnitSchemaPathService.GetPathsBySchemaName(System.String)">
            <summary>
            Gets paths schema name.
            </summary>
            <param name="schemaName">Schema name.</param>
            <returns>Get paths schema name response.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ClientUnitSchemaPath">
            <summary>
            Client unit schema path.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ClientUnitSchemaPath.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ClientUnitSchemaPath.Path">
            <summary>
            Path.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.GetPathsBySchemaNameResponse">
            <inheritdoc cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse" />
            <summary>
            Get paths schema name response.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.GetPathsBySchemaNameResponse.Paths">
            <summary>
            Paths.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ModificationForbidLevel">
            <summary>
            Modification forbid level.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ServiceModelContract.ModificationForbidLevel.None">
            <summary>
            There is no prohibition of modification.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ServiceModelContract.ModificationForbidLevel.Package">
            <summary>
            There is a package that was created by third party.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ServiceModelContract.ModificationForbidLevel.Element">
            <summary>
            There is a lock by another user.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.DataContractQuery">
            <summary>
            Represents contract to fetch data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.DataContractQuery.SchemaName">
            <summary>
            Gets or sets name of the entity schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.DataContractQuery.SerializedFilters">
            <summary>
            Gets or sets value that is serialized conditions to fetch.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.DataContractQuery.TopRecords">
            <summary>
            Gets or sets the number of rows returned by the query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.DataContractQuery.SkipRecords">
            <summary>
            Gets or sets the number of rows to skip.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.DataContractQuery.SerializedSortingColumns">
            <summary>
            Gets or sets value that represents serialized sorting conditions.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.DataContractQuery.SortingColumns">
            <summary>
            Gets or sets list of sorting conditions.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.DataContractQuery.ExcludedPrimaryColumnValues">
            <summary>
            Gets or sets list of primary column values to ignore while fetching the data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.Columns">
            <summary>
            Collection of entity columns.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.InheritedColumns">
            <summary>
            Collection of entity inherited columns.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.Indexes">
            <summary>
            Collection of entity indexes.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.PrimaryColumn">
            <summary>
            Column representing the primary key.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.PrimaryDisplayColumn">
            <summary>
            Primary column for displaying data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.PrimaryImageColumn">
            <summary>
            Primary column for displaying the image.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.PrimaryColorColumn">
            <summary>
            Primary column for displaying color.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.PrimaryOrderColumn">
            <summary>
            Primary column for sorting.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.HierarchyColumn">
            <summary>
            Link column with parent record for hierarchical objects.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.OwnerColumn">
            <summary>
            Column indicating the owner. Used to distribute recording rights to the owner.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.TrackChangesSchemaName">
            <summary>
            Change log object name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.RightSchemaName">
            <summary>
            Permission object name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.LocalizationSchemaName">
            <summary>
            Localization object name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.ParentSchema">
            <summary>
            Parent entity object.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.ExtendParent">
            <summary>
            Replace parent.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.IsDBView">
            <summary>
            Represent structure of data view.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.IsSSPAvailable">
            <summary>
            Is object available as section on SSP
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.UseRecordDeactivation">
            <summary>
            Allow records deactivate.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.ShowInAdvancedMode">
            <summary>
            Show in advanced mode only.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.IsTrackChangesInDB">
            <summary>
            Update change log.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntityDesignSchemaDto.HandledEventNames">
            <summary>
            Names of entity events handled by embedded process. <see cref="T:Terrasoft.Core.Entities.EntitySchemaEvents"/>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDefValueDto.ValueSourceType">
            <summary>
            Value source type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDefValueDto.Value">
            <summary>
            Default column value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDefValueDto.ValueSource">
            <summary>
            Default column value source.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.Caption">
            <summary>
            [General].[Title]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.DataValueType">
            <summary>
            [General].[Data type]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.Description">
            <summary>
            [General].[Description]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.RequirementType">
            <summary>
            [Behavior].[Required]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.UsageType">
            <summary>
            [Behavior].[Usage Mode]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.DefValue">
            <summary>
            [Behavior].[Default value]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.IsValueCloneable">
            <summary>
            [Behavior].[Make copy]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.IsTrackChangesInDB">
            <summary>
            [Behavior].[Update change log]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.Indexed">
            <summary>
            [Behavior].[Update change log]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.MultiLineText">
            <summary>
            [Specific].[Text].[Multi-line text]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.LocalizableText">
            <summary>
            [Specific].[Text].[Localizable text]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.Masked">
            <summary>
            [Specific].[Text].[Masked]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.FormatValidated">
            <summary>
            [Specific].[Text].[Format validated]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.ReferenceSchema">
            <summary>
            [Specific].[Lookup].[Reference schema]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.CascadeConnection">
            <summary>
            [Specific].[Lookup].[Cascade connection]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.DoNotControlIntegrity">
            <summary>
            [Specific].[Lookup].[Do not control integrity]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaColumnDto.SensitiveData">
            <summary>
            [Behavior].[Sensitive data]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaIndexColumnDto.Name">
            <summary>
            [Column]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaIndexColumnDto.OrderDirection">
            <summary>
            [Sorting order]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaIndexColumnDto.ColumnUId">
            <summary>
            Schema column Unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaIndexDto.IsUnique">
            <summary>
            [General].[Unique behavior]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaIndexDto.IsAutoName">
            <summary>
            [General].[Auto Name]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.EntitySchemaIndexDto.Columns">
            <summary>
            [Index columns].[Columns]
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.Designers.ProcessUserTaskDesignSchemaDto.MetaData">
            <summary>
            Schema meta data.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.EntitySchemaResponse">
            <summary>
            Data contract for EntitySchemaResponse.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IAppInstallerService">
            <summary>
            Provides operation contract for application installation web service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.GetAppMetaInfoServiceUrl">
            <summary>
            Returns marketplace application meta info service url.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.DownloadApp(System.String)">
            <summary>
            Downloads application by URI to current temporary storage.
            </summary>
            <param name="uri">Download URI.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.RestartApp">
            <summary>
            Restart application.
            </summary>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.InstallAppFromFile(Terrasoft.Core.ServiceModelContract.InstalledAppInfo)">
            <summary>
            Installs application from zip-file.
            </summary>
            <param name="appInfo">Installing application information.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.OrderAppLicense(Terrasoft.Core.ServiceModelContract.InstalledAppInfo)">
            <summary>
            Orders and adds application licenses if needed.
            </summary>
            <param name="appInfo">Installing application information.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.UninstallApp(System.Guid)">
            <summary>
            Uninstalls application.
            </summary>
            <param name="appId">Application identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.DeletePackage(System.String)">
            <summary>
            Deletes package.
            </summary>
            <param name="packageName">Package name.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.GetIsDemoMode">
            <summary>
            Returns <c>true</c> if demo mode is on. Otherwise returns false.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.ExecuteScript(Terrasoft.Core.ServiceModelContract.ExecuteLibraryInfo)">
            <summary>
            Executing script.
            </summary>
            <param name="info">Library info.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.UnloadAppDomain">
            <summary>
            Unload application domain.
            </summary>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.LoadPackagesToFileSystem(System.Collections.Generic.IList{System.String})">
            <summary>
            Load packages to file system.
            </summary>
            <param name="packageNames"></param>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.LoadPackagesToDB(System.Collections.Generic.IList{System.String})">
            <summary>
            Load packages to DB.
            </summary>
            <param name="packageNames"></param>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.ClearRedisDb">
            <summary>
            Clear redis database.
            </summary>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.CreateApp(Terrasoft.Core.ServiceModelContract.NewAppInfo)">
            <summary>
            Creates new application.
            </summary>
            <param name="newAppInfo">Information about application to create.</param>
            <returns>Response with an identifier and dependencies errors of the created application.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.RunApp(Terrasoft.Core.ServiceModelContract.BaseAppRequest)">
            <summary>
            Runs the execution of actions necessary for the correct work of the application.
            </summary>
            <param name="runAppRequest">Information about the application being started.</param>
            <returns>Response with Url, where to redirect after.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.GetAppCurrentPackage(Terrasoft.Core.ServiceModelContract.BaseAppRequest)">
            <summary>
            Returns the identifier of the current application package.
            </summary>
            <param name="appCurrentPackageRequest">Information about the application.</param>
            <returns>Response with the name and an identifier of the current application package.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.GetDesignPackageUId(Terrasoft.Core.ServiceModelContract.DesignPackageRequest)">
            <summary>
            Returns the package UId for saving schema from Runtime.
            </summary>
            <param name="designPackageRequest">Informatio about saving schema.</param>
            <returns>Response with the package UId for saving schema from Runtime.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.ExportApp(Terrasoft.Core.ServiceModelContract.BaseAppRequest)">
            <summary>
            Returns stream with specified application.
            </summary>
            <param name="exportAppRequest">Information about the application.</param>
            <returns>Identifier of the application to export.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAppInstallerService.GetAppNamesByPackageUId(System.Guid)">
            <summary>
            Gets all application names which contain package.
            </summary>
            <param name="packageUId">Requested package UId.</param>
            <returns>All application names which contain package.</returns>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.InstalledAppInfo.Version">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.InstalledAppInfo.MarketplaceAppId">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.InstalledAppInfo.IsHidden">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.AppInstallerResponse">
            <summary>
            AppInstaller service response.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.AppInstallerResponse.NeedRestartApp">
            <summary>
            Returns <b>true</b> if need web application restarting.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.CreatePackageBackupRequest.ZipPackageName">
            <summary>
            Name of uploaded archive to install.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.RestorePackageFromBackupRequest.InstallPackageData">
            <summary>
            Indicates whether to install package data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.RestorePackageFromBackupRequest.IgnoreSqlScriptBackwardCompatibilityCheck">
            <summary>
            Indicates whether to ignore Sql-script backward compatibility check for changed script
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.AppNamesByPackageResponse.AppNames">
            <summary>
            Contains all application names by package.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IApplicationPackagesService">
            <summary>
            Provides operation contract for application packages web service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IApplicationPackagesService.ExcludePackageFromApp(Terrasoft.Core.ServiceModelContract.ExcludePackageFromAppRequest)">
            <summary>
            Excludes package from application.
            </summary>
            <param name="excludePackageFromAppRequest"><see cref="T:Terrasoft.Core.ServiceModelContract.ExcludePackageFromAppRequest"/></param>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IApplicationPackagesService.CreatePackageInApp(Terrasoft.Core.ServiceModelContract.CreatePackageInAppRequest)">
            <summary>
            Creates new package in app.
            </summary>
            <param name="createPackageInAppRequest"><see cref="T:Terrasoft.Core.ServiceModelContract.CreatePackageInAppRequest"/>></param>
            <returns>Response indicating whether the operation was successful or not.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IApplicationPackagesService.GetExistingPackagesForAddingInApp(Terrasoft.Core.ServiceModelContract.AddExistingPackagesInAppRequest)">
            <summary>
            Returns packages ready for including in app.
            </summary>
            <param name="addExistingPackagesInAppRequest"><see cref="T:Terrasoft.Core.ServiceModelContract.AddExistingPackagesInAppRequest"/>></param>
            <returns>Response with packages to add.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IApplicationPackagesService.AddExistingPackagesToApp(Terrasoft.Core.ServiceModelContract.AddExistingPackagesInAppRequest)">
            <summary>
            Returns packages for adding in app.
            </summary>
            <param name="addExistingPackagesInAppRequest"><see cref="T:Terrasoft.Core.ServiceModelContract.AddExistingPackagesInAppRequest"/>></param>
            <returns>Response with packages to include in specified app.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IApplicationPackagesService.SetAppCurrentPackage(Terrasoft.Core.ServiceModelContract.SetCurrentPackageInAppRequest)">
            <summary>
            Sets current package in app.
            </summary>
            <param name="setCurrentPackageInAppRequest"><see cref="T:Terrasoft.Core.ServiceModelContract.SetCurrentPackageInAppRequest"/>></param>
            <returns>Response..</returns>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ExcludePackageFromAppRequest.AppId">
            <summary>
            Application Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ExcludePackageFromAppRequest.PackageUId">
            <summary>
            Package UId.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IAuthService.OAuthTokenLogin(System.Int32)">
            <summary>
            Authorizes user using OAuth access token.
            </summary>
            <param name="timeZoneOffset">User's time zone offset.</param>
            <returns>Result of login.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.DataContractQueryExecutorFactory">
            <summary>
            Creates <see cref="T:Terrasoft.Core.ServiceModelContract.IDataContractQueryExecutor"/> instance.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IDataContractQueryExecutor">
            <summary>
            Provides API to query DB data using UI query format.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IDataContractQueryExecutor.ReadPrimaryColumnValues``1(System.String,System.String,System.Collections.Generic.IList{Terrasoft.Core.ServiceModelContract.SortingColumn})">
            <summary>
            Reads primary column values of matching records.
            </summary>
            <param name="schemaName">Entity schema name.</param>
            <param name="serializedFilters">Serialized filters.</param>
            <param name="sortingColumns">Sorting information.</param>
            <typeparam name="T">Primary column value type.</typeparam>
            <returns>List of primary column values.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IDataContractQueryExecutor.ReadPrimaryColumnValues``1(Terrasoft.Core.ServiceModelContract.DataContractQuery)">
            <summary>
            Fetches primary column values that match conditions.
            </summary>
            <param name="dataContractQuery">Data contract query.</param>
            <typeparam name="T">Primary column value type.</typeparam>
            <returns>List of primary column values.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IDataContractQueryExecutor.WritePrimaryColumnValues(Terrasoft.Core.ServiceModelContract.WritePrimaryColumnValuesArguments)">
            <summary>
            Fetches primary column values that match conditions and writes them to file.
            </summary>
            <param name="arguments">The arguments to perform writing primary column values.</param>
            <returns>The result of the writing primary column values.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IDcmSchemaManagerService">
            <summary>
            Interface of the DCM schema manager web service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IEntitySerializer.Serialize(Terrasoft.Core.Entities.Entity,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Serialize entity by column name map.
            </summary>
            <param name="entity">Entity to serialize.</param>
            <param name="columnNameMap">Column name map.</param>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IMessageBusManagementService">
            <summary>
            Contract of the message bus management service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IMessageBusManagementService.GetStatistics">
            <summary>
            Returns statistical data of the message bus.
            </summary>
            <returns>Response object.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IMessageBusManagementService.ForceInMemoryMode(System.Boolean)">
            <summary>
            Forces an execution mode to InMemory or back to MassTransit.
            </summary>
            <param name="forceInMemory">
            <c>true</c> to force InMemoryMode, <c>false</c> to force MassTransit mode.
            </param>
            <returns>Response object.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IPackageInstallerService">
            <summary>
            Provides operation contract for package installation web service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IPackageInstallerService.UploadPackage(System.IO.Stream)">
            <summary>
            Uploads archive of packages to current application temporary storage.
            </summary>
            <param name="packageData">Instance of <see cref="T:System.IO.Stream"/> that contains package archive data.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IPackageInstallerService.InstallPackage(System.String)">
            <summary>
            Installs archive of packages to current application persistence storage.
            </summary>
            <param name="zipPackageName">Name of archive to install.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IPackageInstallerService.CreateBackup(Terrasoft.Core.ServiceModelContract.InstalledAppInfo)">
            <summary>
            Creates backup that contains difference in data between system packages and archive of packages
            provided by <paramref name="appInfo"/>.
            </summary>
            <param name="appInfo">Application info.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IPackageInstallerService.CreatePackageBackup(Terrasoft.Core.ServiceModelContract.CreatePackageBackupRequest)">
            <summary>
            Creates backup that contains difference in data between system packages and archive of packages
            provided by <paramref name="createPackageBackupRequest"/>.
            </summary>
            <param name="createPackageBackupRequest">Request with name of uploaded archive to install.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IPackageInstallerService.GetLogFile">
            <summary>
            Returns installation log.
            </summary>
            <returns><see cref="T:System.IO.Stream"/> that contains installation log file data.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IPackageInstallerService.RestoreFromBackup(System.String)">
            <summary>
            Restores configuration from backup.
            </summary>
            <param name="appCode">Application code.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IPackageInstallerService.RestorePackageFromBackup(Terrasoft.Core.ServiceModelContract.RestorePackageFromBackupRequest)">
            <summary>
            Restores configuration from backup.
            </summary>
            <param name="restorePackageFromBackupRequest">Restore parameters.</param>
            <returns>Response.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IPackageInstallerService.Validate(Terrasoft.Core.ServiceModelContract.InstalledAppInfo)">
            <summary>
            Installing application validation.
            </summary>
            <param name="appInfo">Installing application info.</param>
            <returns>Returns <c>true</c> if validation success. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IPackageInstallerService.GetZipPackages(System.Collections.Generic.IList{System.String})">
            <summary>
            Get zip packages.
            </summary>
            <param name="packageNames">Package names.</param>
            <returns><see cref="T:System.IO.Stream"/> that contains zip packages.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.CompleteExecuting(Terrasoft.Core.ServiceModelContract.CompleteExecutingRequest)">
            <summary>
            Completes executing of specified process element.
            </summary>
            <param name="request">Instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.CompleteExecutingRequest"/>.</param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.CompleteExecutingResponse"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.ExecuteProcessElementByUIdPost(Terrasoft.Core.ServiceModelContract.ExecuteProcessElementRequest)">
            <summary>
            Executes process element by it's unique identifier.
            </summary>
            <param name="request">An instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.ExecuteProcessElementRequest"/> request type.</param>
            <returns>An instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.ExecuteProcessElementResponse"/> response type.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.RunSpecifiedProcessVersion(Terrasoft.Core.ServiceModelContract.RunSpecifiedProcessVersionRequest)">
            <summary>
            Runs the specified process version.
            </summary>
            <param name="request">The request.</param>
            <returns>The result of running process.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.GetRunningProcessCount(Terrasoft.Core.ServiceModelContract.GetRunningProcessCountRequest)">
            <summary>
            Gets running process count for all process schema versions.
            </summary>
            <param name="request">The request with some schema version UId.</param>
            <returns>The number of running processes for all process schema versions.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.GetRunningProcessesCount(Terrasoft.Core.ServiceModelContract.GetRunningProcessCountRequest)">
            <summary>
            Gets running process count for all process schema versions.
            </summary>
            <param name="request">The request with some schema version UId.</param>
            <returns>The number of running processes for all process schema versions.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.GetExecutionData(Terrasoft.Core.ServiceModelContract.ProcessExecutionDataRequest)">
            <summary>
            Returns data for the opening page by the specified elements.
            </summary>
            <param name="request">Request.</param>
            <returns>Additional batch data for the opening page.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.GetDcmExecutionData(Terrasoft.Core.ServiceModelContract.DcmExecutionDataRequest)">
            <summary>
            Returns data for the opening page by the specified dcm elements.
            </summary>
            <param name="request">Request.</param>
            <returns>Additional batch data for the opening page.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.GetProcessElementStatus(Terrasoft.Core.ServiceModelContract.ProcessElementStatusRequest)">
            <summary>
            Gets the specified process element running status.
            </summary>
            <param name="request">Request.</param>
            <returns>Status of the specified process element.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.GetTimerEventsInfo(System.Guid)">
            <summary>
            Gets timer events information.
            </summary>
            <param name="processSchemaUId">UId of process schema.</param>
            <returns>Information about timer events.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.GetProcessSchemaDebugInfo(System.String,System.String,System.String)">
            <summary>
            Returns process schema internal information.
            </summary>
            <param name="schema">Schema name or UId.</param>
            <param name="manager">Manager name.</param>
            <param name="type">Debug information type.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.RunProcessForEachValue(Terrasoft.Core.ServiceModelContract.RunProcessForEachValueRequest)">
            <summary>
            Runs process for each specified record.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.RunProcessForMatchingRecords(Terrasoft.Core.ServiceModelContract.RunProcessForMatchingRecordsRequest)">
            <summary>
            Runs process for each record matched with specified filter.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.ChangeToAppropriateDcmInstance(Terrasoft.Core.ServiceModelContract.ChangeToAppropriateDcmInstanceRequest)">
            <summary>
            Changes to appropriate DCM instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.ChangeProcessElementState(Terrasoft.Core.ServiceModelContract.ChangeProcessElementStateRequest)">
            <summary>
            Makes changes to inner state of the running process element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessEngineService.OpenProcessPage(Terrasoft.Core.ServiceModelContract.OpenProcessPageRequest)">
            <summary>
            Opens process page.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IProcessLogService">
            <summary>
            Contract of the process log web service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IProcessLogService.GetProcessMultiInstanceTraceData(Terrasoft.Core.ServiceModelContract.ProcessMultiInstanceTraceDataRequest)">
            <summary>
            Returns multi-instance process log trace data.
            </summary>
            <param name="request">Request object.</param>
            <returns>Response object.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IProcessSchemaManagerService">
            <summary>
            Interface of the process schema manager web service.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IResponseWithProcessExecutionData">
            <summary>
            Indicates that implemented class can contain a process execution data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.IResponseWithProcessExecutionData.ProcessExecutionData">
            <summary>
            Execution data of started process elements.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IProcessResponseWithProcessExecutionData">
            <summary>
            Indicates that implemented class can contain a process execution data and an instruction where to get it from.
            </summary>
            <inheritdoc cref="T:Terrasoft.Core.ServiceModelContract.IResponseWithProcessExecutionData"/>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.IProcessResponseWithProcessExecutionData.ExecutionDataPath">
            <summary>
            Describes the property name which contains an execution data.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IUCTestAddonService.GetTestAddonProperties(System.Guid)">
            <summary>
            Get test addon properties array
            </summary>
            <returns>Return response with string collection merged test addon properties.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.JsonRaw">
            <summary>
            Used to serialize json values without encoding.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.JsonRaw.Value">
            <summary>
            Json value.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.JsonRaw.Create(System.String)">
            <summary>
            Returns new instance of <see cref="T:Terrasoft.Core.ServiceModelContract.JsonRaw"/> value initialized with <paramref name="value"/>.
            </summary>
            <param name="value">Raw json value.</param>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.UsersLicensePackages">
            <summary>
            Data contract for UsersLicensePackages.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.LookupValue">
            <summary>
            Data contract for LookupValue.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.MessageBusStatisticsResponse">
            <summary>
            Response that receives statistical data of the message bus. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.MessageBusStatisticsResponse.Statistics">
            <summary>
            Gets or sets statistical data of the message bus.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.MessageBusStatisticsResponse.NodeIpAddress">
            <summary>
            Node ip address.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.AppInstallerServiceInternal.DownloadApp(System.Uri)">
            <summary>
            Downloads archive of packages by URL to current application temporary storage.
            </summary>
            <param name="uri">Download URI.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.AppInstallerServiceInternal.InstallApp(Terrasoft.Core.Applications.Abstractions.Installation.IInstalledAppInfo)">
            <summary>
            Installs application to current application persistence storage.
            </summary>
            <param name="installedAppInfo">Installing application info.</param>
            <returns>
            Returns <c>true</c> if application has been installed successfully.
            Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.AppInstallerServiceInternal.OrderAppLicense(Terrasoft.Core.Applications.Abstractions.Installation.IInstalledAppInfo,Terrasoft.Core.ILicManager,Terrasoft.Core.ServiceModelContract.IWebLicRequest)">
            <summary>
            Orders and adds application licenses if needed.
            </summary>
            <param name="appInfo">Installing application information.</param>
            /// <param name="licManager">License manager.</param>
            /// <param name="webLicRequest">Web license request.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.AppInstallerServiceInternal.UninstallApp(System.Guid,System.Collections.Generic.IList{System.String})">
            <summary>
            Uninstalls application.
            </summary>
            <param name="appId">Application identifier.</param>
            <param name="errorMessages">Error messages.</param>
            <returns>
            Returns <c>true</c> if application has been uninstalled successfully.
            Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.AppInstallerServiceInternal.DeletePackage(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Deletes package.
            </summary>
            <param name="packageName">Package name.</param>
            <param name="errorMessages">Error messages.</param>
            <returns>
            Returns <c>true</c> if package has been deleted successfully.
            Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.AppInstallerServiceInternal.CreateApp(Terrasoft.Core.Applications.Abstractions.Creation.INewAppInfo)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.AppInstallerServiceInternal.GetAppNamesByPackageUId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.IAppInstallerServiceInternal">
            <summary>
            Defines methods to install application persistence storage.
            Implementation of this interface should encapsulate business logic of <see cref="T:Terrasoft.Core.ServiceModelContract.IAppInstallerService"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IAppInstallerServiceInternal.DownloadApp(System.Uri)">
            <summary>
            Downloads archive of packages by URL to current application temporary storage.
            </summary>
            <param name="uri">Download URI.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IAppInstallerServiceInternal.InstallApp(Terrasoft.Core.Applications.Abstractions.Installation.IInstalledAppInfo)">
            <summary>
            Installs application to current application persistence storage.
            </summary>
            <param name="installedAppInfo">Installing application info.</param>
            <returns>
            Returns <c>true</c> if application has been installed successfully.
            Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IAppInstallerServiceInternal.UninstallApp(System.Guid,System.Collections.Generic.IList{System.String})">
            <summary>
            Uninstalls application.
            </summary>
            <param name="appId">Application identifier.</param>
            <param name="errorMessages">Error messages.</param>
            <returns>
            Returns <c>true</c> if application has been installed successfully.
            Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IAppInstallerServiceInternal.DeletePackage(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Deletes package.
            </summary>
            <param name="packageName">Package name.</param>
            <param name="errorMessages">Error messages.</param>
            <returns>
            Returns <c>true</c> if application has been uninstalled successfully.
            Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IAppInstallerServiceInternal.OrderAppLicense(Terrasoft.Core.Applications.Abstractions.Installation.IInstalledAppInfo,Terrasoft.Core.ILicManager,Terrasoft.Core.ServiceModelContract.IWebLicRequest)">
            <summary>
            Orders and adds application licenses if needed.
            </summary>
            <param name="appInfo">Installing application information.</param>
            /// <param name="licManager">License manager.</param>
            /// <param name="webLicRequest">Web license request.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IAppInstallerServiceInternal.CreateApp(Terrasoft.Core.Applications.Abstractions.Creation.INewAppInfo)">
            <summary>
            Creates new application.
            </summary>
            <param name="appInfo">Information about application to create.</param>
            <returns>Object containing result of application creation.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IAppInstallerServiceInternal.GetAppNamesByPackageUId(System.Guid)">
            <summary>
            Gets all application names which contain package.
            </summary>
            <param name="packageUId">Requested package UId.</param>
            <returns>All application names which contain package.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.ILoggerFileAppender">
            <summary>
            Represents a skeleton for appending a log file to a logger.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.ILoggerFileAppender.AppendFile(System.String)">
            <summary>
            Adds an appender.
            </summary>
            <param name="filePath">File path for added logger.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.ILoggerFileAppender.RemoveFile">
            <summary>
            Removes an appender.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallerServiceInternal">
            <summary>
            Defines methods to install archive with packages to current application persistence storage.
            Implementation of this interface should encapsulate business logic of <see cref="T:Terrasoft.Core.ServiceModelContract.IPackageInstallerService"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallerServiceInternal.UploadPackage(Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo)">
            <summary>
            Uploads archive of packages to current application temporary storage.
            </summary>
            <param name="uploadingFileInfo">Instance of <see cref="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallerServiceInternal.InstallPackage(System.String)">
            <summary>
            Installs archive of packages to current application persistence storage.
            </summary>
            <param name="zipPackageName">Name of uploaded archive to install.</param>
            <returns>
            Returns <c>true</c> if archive of packages has been installed successfully.
            Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallerServiceInternal.Validate(Terrasoft.Core.ServiceModelContract.InstalledAppInfo)">
            <summary>
            Installing application validation.
            </summary>
            <param name="appInfo">Installing application info.</param>
            <returns>Returns <c>true</c> if validation success. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallerServiceInternal.CreateBackup(System.String)">
            <summary>
            Creates backup that contains difference in data between system packages and archive of packages
            provided by <paramref name="zipPackageName"/>.
            </summary>
            <param name="zipPackageName">Name of uploaded archive to install.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallerServiceInternal.CreateBackup(Terrasoft.Core.ServiceModelContract.InstalledAppInfo)">
            <summary>
            Creates backup that contains difference in data between system packages and archive of packages
            provided by <paramref name="appInfo"/>.
            </summary>
            <param name="appInfo">Application info.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallerServiceInternal.GetLogFile">
            <summary>
            Returns <see cref="T:System.IO.Stream"/> that contains installation log file data.
            </summary>
            <returns><see cref="T:System.IO.Stream"/> that contains installation log file data.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallerServiceInternal.GetLogFileName">
            <summary>
            Returns name of installation log file.
            </summary>
            <returns>Name of installation log file.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallerServiceInternal.RestoreFromBackup(System.String)">
            <summary>
            Restores configuration from backup.
            </summary>
            <param name="appCode">Application code.</param>
            <returns>
            Returns <c>true</c> if configuration has been restored successfully.
            Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallerServiceInternal.RestoreFromBackup(System.Boolean,System.Boolean)">
            <summary>
            Restores configuration from backup.
            </summary>
            <param name="installPackageData">Indicates whether to install package data.</param>
            <param name="ignoreSqlScriptBackwardCompatibilityCheck">Indicates whether to ignore Sql-script backward
            compatibility check for changed script.</param>
            <returns>
            Returns <c>true</c> if configuration has been restored successfully.
            Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallerServiceInternal.GetZipPackages(System.Collections.Generic.IList{System.String})">
            <summary>
            Get zip packages.
            </summary>
            <param name="packageNames">Package names.</param>
            <returns><see cref="T:System.IO.Stream"/> that contains zip packages.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallFileLogAppender">
            <summary>
            Defines methods to register file appender for logging package installation process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallFileLogAppender.Register(System.String)">
            <summary>
            Registers file appender in package installation logger.
            </summary>
            <param name="filePath">Path to file where logs will be saved.</param>
            <returns><see cref="T:System.IDisposable"/> instance which unregisters file provider.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            In case if <c>null</c> or empty string passed as value of parameter <paramref name="filePath"/>.
            </exception>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.IStreamToFileSaver">
            <summary>
            Provides methods to save stream to a file.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IStreamToFileSaver.Save(System.IO.Stream,System.String)">
            <summary>
            Saves <paramref name="stream"/> to a file.
            </summary>
            <param name="stream">Instance of <see cref="T:System.IO.Stream"/>.</param>
            <param name="filePath">Path to a file to which <paramref name="stream"/> should be saved.</param>
            <remarks>
            This method creates directory provided by <paramref name="filePath"/> in case if it does not exist.
            If file provided by <paramref name="filePath"/> already exists it will be overwritten.
            </remarks>
            <exception cref="T:System.IO.IOException">
            The directory specified by <paramref name="filePath"/> is read-only or
            an I/O error occurred while creating the file. 
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">
            The caller does not have the required permission.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="filePath"/> contains one or more invalid characters 
            as defined by <see cref="F:System.IO.Path.InvalidPathChars"/>.
            </exception>
            <exception cref="T:System.IO.PathTooLongException">
            The specified <paramref name="filePath"/> exceed the system-defined maximum length.
            </exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">
            The specified <paramref name="filePath"/> is invalid, such as being on an unmapped drive.
            </exception>
            <exception cref="T:System.NotSupportedException">
            Creating a directory with only the colon (:) character was attempted.
            </exception>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            <paramref name="stream"/> or <paramref name="filePath"/> is null or empty.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IStreamToFileSaver.Append(System.IO.Stream,System.String)">
            <summary>
            Appends <paramref name="stream"/> to a file.
            </summary>
            <param name="stream">Instance of <see cref="T:System.IO.Stream"/>.</param>
            <param name="filePath">Path to a file to which <paramref name="stream"/> should be appended.</param>
            <remarks>
            This method creates new file in case when file provided by <paramref name="filePath"/> doesn't exist.
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="filePath"/> contains one or more invalid characters 
            as defined by <see cref="F:System.IO.Path.InvalidPathChars"/>.
            </exception>
            <exception cref="T:System.IO.PathTooLongException">
            The specified <paramref name="filePath"/> exceed the system-defined maximum length.
            </exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">
            The specified <paramref name="filePath"/> is invalid, such as being on an unmapped drive.
            </exception>
            <exception cref="T:System.IO.IOException">
            The directory specified by <paramref name="filePath"/> is read-only or
            an I/O error occurred while opening the file. 
            </exception>
            <exception cref="T:System.UnauthorizedAccessException">
            <paramref name="filePath"/> specified a file that is read-only.
            <para>-or-</para>
            This operation is not supported on the current platform.
            <para>-or-</para>
            <paramref name="filePath"/> specified a directory.
            <para>-or-</para>
            The caller does not have the required permission.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="filePath"/> specified an invalid value.
            </exception>
            <exception cref="T:System.NotSupportedException">
            <paramref name="filePath"/> is in an invalid format.
            </exception>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            <paramref name="stream"/> or <paramref name="filePath"/> is null or empty.
            </exception>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo">
            <summary>
            Defines properties and methods to retrieve information about uploading file.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo.IsChunkedUpload">
            <summary>
            Gets a value indicating whether upload is in chunk mode.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo.IsFirstChunk">
            <summary>
            Gets a value indicating whether this is a first chunk.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo.IsUploadCompleted">
            <summary>
            Gets a value indicating whether this is a last chunk.
            In case when upload is not in chunk mode returns <c>true</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo.FileName">
            <summary>
            Gets uploading file name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo.UploadedPercent">
            <summary>
            Gets uploaded data percent.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo.GetContent">
            <summary>
            Gets content of uploading file.
            </summary>
            <remarks>
            In case when upload is chunked (<see cref="P:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo.IsChunkedUpload"/> returns <c>true</c>) 
            returns partial file content.
            </remarks>
            <returns>Instance of <see cref="T:System.IO.Stream"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfoFactory">
            <summary>
            Abstract factory for <see cref="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfoFactory.GetUploadFileInfo(System.IO.Stream,Terrasoft.Web.Http.Abstractions.HttpRequest)">
            <summary>
            Gets new instance of <see cref="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo"/>.
            </summary>
            <param name="fileData">Uploading file data.</param>
            <param name="request">HTTP request.</param>
            <returns>Instance of <see cref="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.NLogLoggerFileAppender">
            <inheritdoc />
            <summary>
            <see cref="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.ILoggerFileAppender"/> implementation for NLog.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.NLogLoggerFileAppender.AppendFile(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.NLogLoggerFileAppender.RemoveFile">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.PackageInstaller.PackageInstallerServiceInternal.PackageZipExporter">
            <summary>
            Package zip exporter.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.PackageInstallerServiceInternal.UploadPackage(Terrasoft.Core.ServiceModelContract.PackageInstaller.IUploadFileInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.PackageInstallerServiceInternal.InstallPackage(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.PackageInstallerServiceInternal.GetLogFile">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.PackageInstallerServiceInternal.CreateBackup(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.PackageInstallerServiceInternal.CreateBackup(Terrasoft.Core.ServiceModelContract.InstalledAppInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.PackageInstallerServiceInternal.RestoreFromBackup(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.PackageInstallerServiceInternal.RestoreFromBackup(System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.PackageInstallerServiceInternal.Validate(Terrasoft.Core.ServiceModelContract.InstalledAppInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.PackageInstallerServiceInternal.GetZipPackages(System.Collections.Generic.IList{System.String})">
            <inheritdoc/>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.PackageInstallFileLogAppender">
            <inheritdoc cref="T:Terrasoft.Core.ServiceModelContract.PackageInstaller.IPackageInstallFileLogAppender"/>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.PackageInstallFileLogAppender.Register(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.PackageInstaller.PackageInstallFileLogAppender.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IPackageService">
            <summary>
            Provides operation contract for package web service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IPackageService.DeactivatePackage(System.Guid)">
            <summary>
            Deactivate package by UId.
            </summary>
            <param name="packageUId">Package UId.</param>
            <returns><see cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse"/>></returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IPackageService.ActivatePackage(System.String)">
            <summary>
            Activate package by name.
            </summary>
            <param name="packageName">Package name.</param>
            <returns><see cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse"/>></returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IPackageService.GetPackagesForAddingDependencies">
            <summary>
            Returns all active packages.
            </summary>
            <returns><see cref="T:Terrasoft.Core.ServiceModelContract.WorkspacePackagesResponse"/>></returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.SchemaVersionInfoResponse">
            <summary>
            The service response for the schema version info request.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SchemaVersionInfoResponse.MaxVersionInPackage">
            <summary>
            Maximum version of the given schema in the package.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SchemaVersionInfoResponse.ParentSchemaName">
            <summary>
            Parent schema name.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.NameValuePair">
            <summary>
            Serialized to string name and value pair.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.NameValuePair.Name">
            <summary>
            Gets or sets the parameter name.
            </summary>
            <value>
            The parameter name.
            </value>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.NameValuePair.Value">
            <summary>
            Gets or sets the parameter value.
            </summary>
            <value>
            The parameter value.
            </value>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ProcessParameterValueCollection">
            <summary>
            Collection of serialized to string process parameter values.
            </summary>
            <seealso cref="T:Terrasoft.Core.ServiceModelContract.NameValuePair" />
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ProcessExecutionOptions">
            <summary>
            Represents data contract for the process execution options. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ProcessExecutionOptions.SessionId">
            <summary>
            Gets or sets the unique identifier for the session.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.BaseProcessRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.BaseProcessRequest"/> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.BaseProcessRequest.IncludeProcessExecutionData">
            <inheritdoc cref="P:Terrasoft.Nui.ServiceModel.DataContract.IQueryProcessExecutionData.IncludeProcessExecutionData"/>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.BaseProcessRequest.ForceBackgroundMode">
            <inheritdoc cref="P:Terrasoft.Nui.ServiceModel.DataContract.IQueryProcessExecutionData.ForceBackgroundMode"/>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.BaseProcessRequest.ProcessExecutionOptions">
            <inheritdoc cref="P:Terrasoft.Nui.ServiceModel.DataContract.IQueryProcessExecutionData.ProcessExecutionOptions"/>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.BaseRunProcessRequest">
            <summary>
            Data need to run process with initial parameter values.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.BaseRunProcessRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.BaseRunProcessRequest"/> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.BaseRunProcessRequest.ParameterValues">
            <summary>
            Gets or sets the initial parameter values.
            </summary>
            <value>
            The initial parameter values.
            </value>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.BaseRunProcessRequest.ResultParameterNames">
            <summary>
            Gets or sets the result parameter names to retrieve after execution.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.RunSpecifiedProcessVersionRequest">
            <summary>
            Data need to run specified process version.
            </summary>
            <seealso cref="T:Terrasoft.Core.ServiceModelContract.RunProcessRequest" />
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.RunProcessRequest">
            <summary>
            Data need to run process.
            </summary>
            <seealso cref="T:Terrasoft.Core.ServiceModelContract.BaseRunProcessRequest" />
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.RunProcessRequest.SchemaUId">
            <summary>
            Gets or sets the process schema UId.
            </summary>
            <value>
            The process schema UId.
            </value>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.RunProcessRequest.SchemaName">
            <summary>
            Gets or sets the name of the process schema.
            </summary>
            <value>
            The name of the process schema.
            </value>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.GetRunningProcessCountRequest">
            <summary>
            Returns count of the running process instances by schema Id or UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.GetRunningProcessCountRequest.SchemaId">
            <summary>
            Gets or sets the process schema identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.GetRunningProcessCountRequest.SchemaUId">
            <summary>
            Gets or sets the process schema unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.GetRunningProcessCountRequest.CountSpecifiedVersion">
            <summary>
            Determines whether to count only specified version or all process versions.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.GetRunningProcessCountRequest.ManagerName">
            <summary>
            Gets or sets the manager name.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.GetRunningProcessCountResponse">
            <summary>
            Returns count of the running process instances by schema Id or UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.GetRunningProcessCountResponse.Count">
            <summary>
            Count of the process instances.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.EnableProcessResponse">
            <summary>
            Result of enabling process.
            </summary>
            <seealso cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse" />
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.DisableProcessResponse">
            <summary>
            Result of disabling process.
            </summary>
            <seealso cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse" />
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.RunProcessResponse">
            <summary>
            Result of running process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.RunProcessResponse.ProcessId">
            <summary>
            Gets or sets the process instance identifier.
            </summary>
            <value>
            The process instance identifier.
            </value>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.RunProcessResponse.ProcessStatus">
            <summary>
            Gets or sets the process status.
            </summary>
            <value>
            The process status.
            </value>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.RunProcessResponse.ResultParameterValues">
            <summary>
            Result parameter values.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.BaseRunProcessResponse">
            <summary>
            Base class for result of running process.
            </summary>
            <seealso cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse" />
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.BaseRunProcessResponse.ProcessExecutionData">
            <summary>
            Execution data of started process elements.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.CompleteExecutingRequest">
            <summary>
            Represents a request for complete element execution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.CompleteExecutingRequest.ProcessElementUId">
            <summary>
            Process element UId to complete.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.CompleteExecutingRequest.ParameterValues">
            <summary>
            Parameter values to complete element with.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.CompleteParameter">
            <summary>
            Complete parameter.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.CompleteParameter.Name">
            <summary>
            Parameter name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.CompleteParameter.Value">
            <summary>
            Parameter value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.CompleteExecutingResponse">
            <summary>
            Complete executing response.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.CompleteExecutingResponse.WaitingUserTaskCount">
            <summary>
            Returns count of user tasks that are pending to open.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.CompleteExecutingResponse.ProcessExecutionData">
            <inheritdoc cref="P:Terrasoft.Core.ServiceModelContract.IResponseWithProcessExecutionData.ProcessExecutionData"/>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.CompleteExecutingResponse.ExecutionDataPath">
            <inheritdoc cref="P:Terrasoft.Core.ServiceModelContract.IProcessResponseWithProcessExecutionData.ExecutionDataPath"/>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ForeignLockResponse">
            <summary>
            The service response represents that the specified schema has foreign lock.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ForeignLockResponse.ModificationForbidLevel">
            <summary>
            Gets or sets modification forbid level.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ForeignLockResponse.Message">
            <summary>
            Gets or sets description information.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ActualVersionSchemaInfoResponse">
            <summary>
            The service response for the schema's actual version info request.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ActualVersionSchemaInfoResponse.ActualVersionSchemaUId">
            <summary>
            The unique identifier of the actual version schema.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ProcessElementExecutionDataResponse">
            <summary>
            Process element execution data response.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ProcessElementExecutionDataResponse.ElementUId">
            <summary>
            Process element identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ProcessElementExecutionDataResponse.Message">
            <summary>
            Serialized process element execution data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ProcessElementExecutionDataResponse.ManagerName">
            <summary>
            Process schema manager name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ProcessElementExecutionDataResponse.Element">
            <summary>
            Process element instance.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.DcmElementExecutionDataResponse">
            <summary>
            Dcm element execution data response.
            </summary>
            <seealso cref="T:Terrasoft.Core.ServiceModelContract.ProcessElementExecutionDataResponse" />
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.DcmElementExecutionDataResponse.RequiredType">
            <summary>
            Dcm element required type.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ProcessExecutionDataResponse">
            <summary>
            Process elements execution data batch response.
            </summary>
            <seealso cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse" />
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ProcessExecutionDataResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.ProcessExecutionDataResponse"/> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ProcessExecutionDataResponse.Batch">
            <summary>
            Process elements execution data batch response.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ProcessExecutionDataRequest">
            <summary>
            Process elements execution data batch request.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ProcessExecutionDataRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.ProcessExecutionDataRequest"/> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ProcessExecutionDataRequest.ElementUIds">
            <summary>
            Process elements identifiers.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.DcmExecutionDataRequest">
            <summary>
            DCM elements execution data batch request.
            </summary>
            <seealso cref="T:Terrasoft.Core.ServiceModelContract.ProcessExecutionDataRequest" />
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ActualProcessSchemasByFilterRequest">
            <summary>
            List of actual version process schemas service request.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ActualProcessSchemasByFilterRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.ActualProcessSchemasByFilterRequest"/> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ActualProcessSchemasByFilterRequest.PackageUId">
            <summary>
            The process package unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ActualProcessSchemasByFilterRequest.EnabledOnly">
            <summary>
            Requests enabled actual version process schemas only.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ActualProcessSchemasByFilterRequest.ExcludedSchemas">
            <summary>
            List of the process schemas unique identifiers that must be excluded from the result.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ActualProcessSchemasByFilterResponse">
            <summary>
            List of actual version process schemas service response.
            </summary>
            <seealso cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse" />
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ActualProcessSchemasByFilterResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.ActualProcessSchemasByFilterResponse"/> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ActualProcessSchemasByFilterResponse.Schemas">
            <summary>
            Serializable object of the actual version process schemas list.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ProcessElementStatusRequest">
            <summary>
            Process element running status request.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ProcessElementStatusRequest.ProcessElementUId">
            <summary>
            Gets or sets unique identifier of the process element.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ProcessElementStatusResponse">
            <summary>
            Process element running status response.
            </summary>
            <seealso cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse" />
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ProcessElementStatusResponse.Status">
            <summary>
            Gets or sets status of the process element.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.ProcessStatus" />
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.TimerEventsInfoResponse">
            <summary>
            Timer events info response.
            </summary>
            <seealso cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse" />
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.TimerEventsInfoResponse.TimerEventsInfo">
            <summary>
            Timer events info.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.BaseRunProcessForEachValueRequest">
            <summary>
            Base request for starting process multiple times.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.BaseRunProcessForEachValueRequest.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.ServiceModelContract.BaseRunProcessForEachValueRequest"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.BaseRunProcessForEachValueRequest.InputParameterName">
            <summary>
            Name of process parameter to provide value to.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.BaseRunProcessForEachValueRequest.InputParameterUId">
            <summary>
            UId of process parameter to provide value to.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.BaseRunProcessForEachValueRequest.IsSupportMultiplePageOpening">
            <summary>
            Gets or sets value that indicates whether the multiple page opening is supported.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.RunProcessForEachValueRequest">
            <summary>
            Request for starting process for each specified value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.RunProcessForEachValueRequest.Values">
            <summary>
            Values collection. Process will be started for each value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.RunProcessForMatchingRecordsRequest">
            <summary>
            Request for starting process for each record that match conditions.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.RunProcessForMatchingRecordsRequest.EntitySchemaName">
            <summary>
            Entity schema to select records.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.RunProcessForMatchingRecordsRequest.FilterConfig">
            <summary>
            Serialized filters.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.RunProcessForMatchingRecordsRequest.SortingColumns">
            <summary>
            Sorting columns.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.RunProcessForMatchingRecordsRequest.PrimaryColumnValuesToExclude">
            <summary>
            List of primary column values to exclude from selection result.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.SortingColumn">
            <summary>
            Represents data query sorting information.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SortingColumn.Path">
            <summary>
            Column path.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SortingColumn.Direction">
            <summary>
            Sorting direction.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.SortingColumn.Position">
            <summary>
            Sorting position.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ChangeToAppropriateDcmInstanceRequest">
            <summary>
            Request for changing to appropriate DCM process instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ChangeToAppropriateDcmInstanceRequest.EntitySchemaName">
            <summary>
            Gets or sets name of the entity schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ChangeToAppropriateDcmInstanceRequest.RecordId">
            <summary>
            Gets or sets identifier of the entity.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ChangeToAppropriateDcmInstanceRequest.CurrentStageId">
            <summary>
            Gets or sets identifier of the current DCM stage.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ChangeProcessElementPerformerRequest">
            <summary>
            Request for changing process element performer assignment.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ChangeProcessElementPerformerRequest.ContactId">
            <summary>
            Desired performer user contact id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ChangeProcessElementPerformerRequest.AdminRoleId">
            <summary>
            Desired admin unit role identifier.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ChangeProcessElementPerformerRequest.CreateCommand">
            <summary>
            Creates a command class from request.
            </summary>
            <returns>Command class.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ChangeProcessElementStateRequest">
            <summary>
            Request for changing process element state.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ChangeProcessElementStateRequest.ElementUId">
            <summary>
            Identifier of the process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ChangeProcessElementStateRequest.Performer">
            <summary>
            Request for changing process element performer assignment.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ChangeProcessElementStateRequest.TechnicalActivityValues">
            <summary>
            Request for changing technical activity values.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.OpenProcessPageRequest">
            <summary>
            Open process page request.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.OpenProcessPageRequest.ProcessId">
            <summary>
            Process identifier.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.OpenProcessPageResponse">
            <summary>
            Open process page response.
            </summary>
            <inheritdoc cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse" />
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.OpenProcessPageResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.OpenProcessPageResponse" /> type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.OpenProcessPageResponse.ExecutionData">
            <summary>
            Gets or sets next process element execution data.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.OpenProcessPageResponse.AddExecutionData(System.String)">
            <summary>
            Adds execution data.
            </summary>
            <param name="executionData">Execution data.</param>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ExecuteProcessElementRequest">
            <summary>
            Execute process element request.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ExecuteProcessElementRequest.ProcessElementUId">
            <summary>
            Process element unique identifier.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ExecuteProcessElementResponse">
            <summary>
            Execute process element response.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ExecuteProcessElementResponse.ProcessExecutionData">
            <inheritdoc cref="P:Terrasoft.Core.ServiceModelContract.IResponseWithProcessExecutionData.ProcessExecutionData"/>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ExecuteProcessElementResponse.ExecutionDataPath">
            <inheritdoc cref="P:Terrasoft.Core.ServiceModelContract.IProcessResponseWithProcessExecutionData.ExecutionDataPath"/>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ProcessMultiInstanceTraceDataRequest">
            <summary>
            Requests information about the process multi-instance trace data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.ProcessMultiInstanceTraceDataRequest.IteratorElementId">
            <summary>
            The unique identifier of process element log.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.RawMessageFormatter">
            <summary>
            Used to support raw programing model for operation in WCF service that uses data contracts.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.RawMessageFormatter.#ctor(System.ServiceModel.Dispatcher.IDispatchMessageFormatter)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.RawMessageFormatter"/> class.
            </summary>
            <param name="originalFormatter">Instance that will be decorated.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.RawMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])">
            <summary>Deserializes a message into an array of parameters.</summary>
            <param name="message">The incoming message.</param>
            <param name="parameters">The objects that are passed to the operation as parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.RawMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)">
            <summary>Serializes a reply message from a specified message version, array of parameters,
            and a return value.</summary>
            <returns>The serialized reply message.</returns>
            <param name="messageVersion">The SOAP message version.</param>
            <param name="parameters">The out parameters.</param>
            <param name="result">The return value.</param>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.RawMessageFormatterAttribute">
            <summary>
            WCF supports two body processing modes: first is using data contracts and second is reading raw body as Stream.
            Data contracts is not supported in services that has at least one method with parameter of type Stream.
            To support both modes, every method with parameter of type Stream should be marked with this attribute.
            </summary>
            <seealso cref="T:System.Attribute" />
            <seealso cref="T:System.ServiceModel.Description.IOperationBehavior" />
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.RawMessageFormatterAttribute.Validate(System.ServiceModel.Description.OperationDescription)">
            <summary>Implement to confirm that the operation meets some intended criteria.</summary>
            <param name="operationDescription">The operation being examined. Use for examination only. If the operation 
            description is modified, the results are undefined.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.RawMessageFormatterAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
            <summary>Implements a modification or extension of the service across an operation.</summary>
            <param name="operationDescription">The operation being examined. Use for examination only. If the operation 
            description is modified, the results are undefined.</param>
            <param name="dispatchOperation">The run-time object that exposes customization properties for the operation 
            described by <paramref name="operationDescription" />.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.RawMessageFormatterAttribute.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
            <summary>Implements a modification or extension of the client across an operation.</summary>
            <param name="operationDescription">The operation being examined. Use for examination only. If the operation 
            description is modified, the results are undefined.</param>
            <param name="clientOperation">The run-time object that exposes customization properties for the operation 
            described by <paramref name="operationDescription" />.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.RawMessageFormatterAttribute.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Implement to pass data at runtime to bindings to support custom behavior.</summary>
            <param name="operationDescription">The operation being examined. Use for examination only. If the operation 
            description is modified, the results are undefined.</param>
            <param name="bindingParameters">The collection of objects that binding elements require to support the
            behavior.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.RelatedPages.Interfaces.IRelatedPagesService.GetEntityRelatedPages">
            <summary>
            Get entity related pages.
            </summary>
            <returns>Return response with collection relatedPages group by entity schema.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ResponseJsonFormatter">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ResponseJsonFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])">
            <summary>Deserializes a message into an array of parameters.</summary>
            <param name="message">The incoming message.</param>
            <param name="parameters">The objects that are passed to the operation as parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ResponseJsonFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)">
            <summary>Serializes a reply message from a specified message version, array of parameters,
            and a return value.</summary>
            <param name="messageVersion">The SOAP message version.</param>
            <param name="parameters">The out parameters.</param>
            <param name="result">The return value.</param>
            <returns>The serialized reply message.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ResponseJsonFormatterAttribute">
            <summary>
            WCF supports two body processing modes: first is using data contracts and second is reading raw body as Stream.
            Data contracts is not supported in services that has at least one method with parameter of type Stream.
            To support both modes, every method with parameter of type Stream should be marked with this attribute.
            </summary>
            <seealso cref="T:System.Attribute" />
            <seealso cref="T:System.ServiceModel.Description.IOperationBehavior" />
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ResponseJsonFormatterAttribute.Validate(System.ServiceModel.Description.OperationDescription)">
            <summary>Implement to confirm that the operation meets some intended criteria.</summary>
            <param name="operationDescription">The operation being examined. Use for examination only. If the operation 
            description is modified, the results are undefined.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ResponseJsonFormatterAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
            <summary>Implements a modification or extension of the service across an operation.</summary>
            <param name="operationDescription">The operation being examined. Use for examination only. If the operation 
            description is modified, the results are undefined.</param>
            <param name="dispatchOperation">The run-time object that exposes customization properties for the operation 
            described by <paramref name="operationDescription" />.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ResponseJsonFormatterAttribute.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
            <summary>Implements a modification or extension of the client across an operation.</summary>
            <param name="operationDescription">The operation being examined. Use for examination only. If the operation 
            description is modified, the results are undefined.</param>
            <param name="clientOperation">The run-time object that exposes customization properties for the operation 
            described by <paramref name="operationDescription" />.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ResponseJsonFormatterAttribute.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
            <summary>Implement to pass data at runtime to bindings to support custom behavior.</summary>
            <param name="operationDescription">The operation being examined. Use for examination only. If the operation 
            description is modified, the results are undefined.</param>
            <param name="bindingParameters">The collection of objects that binding elements require to support the
            behavior.</param>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.ResponseUtils">
            <summary>
            Provides utility methods for working with <see cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse"/> in context of WCF service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ResponseUtils.SetDesingTimeException``1(``0,System.Exception)">
            <summary>
            Initializes response instance with design time exception and sets response status code to 500.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="source">The response instance.</param>
            <param name="exception">The exception.</param>
            <remarks>This method adds call stack data to <paramref name="source"/> only when assembly is compiled in 
            debug mode.</remarks>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ResponseUtils.SetRunTimeException``1(``0,System.Exception)">
            <summary>
            Initializes response instance with run time exception and sets response status code to 500.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="source">The source.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ResponseUtils.SetErrorInfo``1(``0,System.Exception)">
            <summary>
            Initializes response instance with specified error information.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="source">The source.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ResponseUtils.CreateResponseWithErrorInfo(System.Exception)">
            <summary>
            Creates instance of <see cref="T:Terrasoft.Core.ServiceModelContract.BaseResponse"/> containing specified error information.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ResponseUtils.CreateResponseWithErrorInfo``1(System.Exception)">
            <summary>
            Creates response instance containing specified error information.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="exception">The exception instance.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ResponseUtils.CreateValidationDependencyErrorResponseWithErrorInfo``1(Terrasoft.Core.Packages.Exceptions.AutoAddPackageDependenciesValidateException)">
            <summary>
            Creates response instance containing specified error information.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="exception">The exception instance.</param>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.ResponseUtils.CreateValidationDependencyErrorResponseWithErrorInfo``1(Terrasoft.Core.Packages.Exceptions.AutoAddPackageDependenciesValidateException,System.String)">
            <summary>
            Creates response instance containing specified error information.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="exception">The exception instance.</param>
            <param name="errorMessage">Custom error message.</param>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.EntitySchemaRecordDefRight">
            <summary>
            Data contract for EntitySchemaRecordDefRight.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.EntitySchemaColumnRight">
            <summary>
            Data contract for EntitySchemaColumnRight.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.EntitySchemaColumnRights">
            <summary>
            Data contract for EntitySchemaColumnRights.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.EntitySchemaOperationsRights">
            <summary>
            Data contract for EntitySchemaOperationsRights.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.EntityOperationGrantee">
            <summary>
            Data contract for the EntityOperationGrantee.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.AdministratedObject">
            <summary>
            Data contract for AdministratedObject.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.SysAdminUnit">
            <summary>
            Data contract for SysAdminUnit.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.AdministratedObjectsResponse">
            <summary>
            Data contract for AdministratedObjectsResponse.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.AdministratedObjectResponse">
            <summary>
            Data contract for AdministratedObjectResponse.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.SysAdminUnitsResponse">
            <summary>
            Data contract for SysAdminUnitsResponse.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.SysAdminUnitResponse">
            <summary>
            Data contract for SysAdminUnitResponse.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.TimelineEntity.Interfaces.ITimelineEntityService.GetTimelineEntities(Terrasoft.Core.ServiceModelContract.TimelineEntity.Models.GetTimelineEntitiesRequest)">
            <summary>
            Get timeline entities.
            <param name="request">Name of schema for wich timeline is using.</param>
            </summary>
            <returns>Return response with collection timeline entities group by entity schema.</returns>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.TimelineEntity.Models.GetTimelineEntitiesRequest.SchemaName">
            <summary>
            Schema name wich will be using timeline.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.TimelineEntity.Models.GetTimelineEntitiesRequest.ExcludedTiles">
            <summary>
            TimelineEntities that would be excluded.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.TimelineEntity.Models.TimelineEntityDto.UId">
            <summary>
            Timeline schema UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.TimelineEntity.Models.TimelineEntityDto.SchemaName">
            <summary>
            Timeline schema name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.TimelineEntity.Models.TimelineEntityDto.TypeColumnValueName">
            <summary>
            Timeline typed column value name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.TimelineEntity.Models.TimelineEntityDto.SortColumn">
            <summary>
            Timeline sort column.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.TimelineEntity.Models.TimelineEntityDto.OwnerColumn">
            <summary>
            Timeline owner column.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.TimelineEntity.Models.TimelineEntityDto.PredefinedColumns">
            <summary>
            Timeline predefined columns and layouts.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.TimelineEntity.Models.TimelineEntityDto.TimelineFilter">
            <summary>
            Filter column and it`s value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.TimelineEntity.Models.TimelineEntityDto.DefaultMasterEntityColumnName">
            <summary>
            Reference column wich will be used as MasterEntityColumnName by default.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.TimelineEntity.Models.TimelineEntityDto.IconId">
            <summary>
            Identifier of tile icon.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.UrlBaseResponse">
            <summary>
            Base class for service operation url response.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.UrlBaseResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ServiceModelContract.UrlBaseResponse"/> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.UrlBaseResponse.Url">
            <summary>
            The service response url.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.UserInfo">
            <summary>
            Data contract for UserInfo.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.CultureSettings">
            <summary>
            Data contract for CultureSettings.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.UserInfoResponse">
            <summary>
            Data contract for UserInfoResponse.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.DateTimeFormat">
            <summary>
            Data contract for DateTimeFormat.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.AddTrialLicenseResult">
            <summary>
            Adding trial license result.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ServiceModelContract.AddTrialLicenseResult.Added">
            <summary>
            License successfully added.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ServiceModelContract.AddTrialLicenseResult.ActiveLicAlreadyExists">
            <summary>
            Active license already exists.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ServiceModelContract.AddTrialLicenseResult.InactiveLicAlreadyExists">
            <summary>
            Inactive license already exists.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ServiceModelContract.AddTrialLicenseResult.CustomerNotExists">
            <summary>
            Customer does not exist.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ServiceModelContract.AddTrialLicenseResult.LicProductNotExists">
            <summary>
            Lic product does not exist.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ServiceModelContract.AddTrialLicenseResult.LicenseIsNotRequired">
            <summary>
            License is not required.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.IWebLicRequest">
            <summary>
            Provides methods for license request to external service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IWebLicRequest.AddTrialLicense(System.String,System.String)">
            <summary>
            Adds trial license.
            </summary>
            <param name="customerId">Customer identifier.</param>
            <param name="appCode">Installed application code.</param>
            <returns>Adding trial license result.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.IWebLicRequest.GetLicResponse(System.String,System.String)">
            <summary>
            Returns license response.
            </summary>
            <param name="customerId">Customer identifier.</param>
            <param name="version">Core version.</param>
            <returns>Stream with license response.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.WebLicRequest">
            <summary>
            Represents class for license request to external service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.WebLicRequest.AddTrialLicense(System.String,System.String)">
            <summary>
            Adds trial license.
            </summary>
            <param name="customerId">Customer identifier.</param>
            <param name="appCode">Installed application code.</param>
            <returns>Adding trial license result.</returns>
        </member>
        <member name="M:Terrasoft.Core.ServiceModelContract.WebLicRequest.GetLicResponse(System.String,System.String)">
            <summary>
            Returns license response.
            </summary>
            <param name="customerId">Customer identifier.</param>
            <param name="version">Core version.</param>
            <returns>Stream with license response.</returns>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.WorkspaceItemType">
            <summary>
            Declares types of workspace items.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.WorkspaceItemStatus">
            <summary>
            Describes installation status of workspace item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemStatus.NeedInstall">
            <summary>
            Indicates, that item needs to be installed in DB.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemStatus.NeedUpdateSourceCode">
            <summary>
            Indicates, that item needs an update of autogenerated source code.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemStatus.NeedUpdateStructure">
            <summary>
            Indicates, that item needs a DB structure update.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemStatus.LastError">
            <summary>
            Last occured error after any operation with item.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails">
            <summary>
            Base DTO for all workspace items details object.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.Id">
            <summary>
            Item identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.UId">
            <summary>
            Item global identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.Name">
            <summary>
            Name of item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.Title">
            <summary>
            Localizable caption of item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.PackageUId">
            <summary>
            Unique identifier of package that item belongs to.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.PackageName">
            <summary>
            Name of package that item belongs to.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.CreatedBy">
            <summary>
            Name of administrative unit that created item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.CreatedOn">
            <summary>
            Date of item creation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.ModifiedBy">
            <summary>
            Name of last administrative unit that modified item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.ModifiedOn">
            <summary>
            Date of item last modification.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.IsChanged">
            <summary>
            Flag of item was changed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.IsLocked">
            <summary>
            Flag of item was locked in source control.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.IsReadOnly">
            <summary>
            Flag of item cannot be modified.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.Status">
            <summary>
            Represents status of item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.FullQualifiedName">
            <summary>
            Full qualified assembly name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.IsNetStandard">
            <summary>
            Flag of assembly can be used in netstandard build.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.LoadOnAppStart">
            <summary>
            Flag of assembly should be loaded on application start
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.IsPublic">
            <summary>
            Flag of the assembly can be public.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.DbStructureModifiedOn">
            <summary>
            Date of last DB structure modification.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.ParentUId">
            <summary>
            Unique identifier of parent schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.ReplaceParent">
            <summary>
            Current schema extends and replaces parent in hierarchy tree.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.ParentCaption">
            <summary>
            Localizable caption of parent schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.Description">
            <summary>
            Schema item description.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.ManagerName">
            <summary>
            Name of schema item manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.MetaDataModifiedOn">
            <summary>
            Date of last schema metadata modification.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.LockedBy">
            <summary>
            Name of administrative unit that locked schema in source control.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItemDetails.DataObjectName">
            <summary>
            Name of related to current data binding entity schema.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.WorkspaceItem">
            <summary>
            Base DTO for all workspace items.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.Id">
            <summary>
            Item identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.UId">
            <summary>
            Item global identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.Name">
            <summary>
            Name of item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.Title">
            <summary>
            Localizable caption of item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.PackageUId">
            <summary>
            Unique identifier of package that item belongs to.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.PackageName">
            <summary>
            Name of package that item belongs to.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.PackageRepository">
            <summary>
            Name of package repository.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.CreatedOn">
            <summary>
            Date of item creation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.ModifiedOn">
            <summary>
            Date of item last modification.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.IsChanged">
            <summary>
            Flag of item was changed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.IsLocked">
            <summary>
            Flag of item was locked in source control.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.IsReadOnly">
            <summary>
            Flag of item cannot be modified.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.Status">
            <summary>
            Represents status of item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WorkspaceItem.DataObjectName">
            <summary>
            Name of related to current data binding entity schema.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.WritePrimaryColumnValuesArguments">
            <summary>
            Represents the arguments to perform writing primary column values.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WritePrimaryColumnValuesArguments.File">
            <summary>
            Gets or sets the file to write.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WritePrimaryColumnValuesArguments.DataContractQuery">
            <summary>
            Gets or sets data contract query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WritePrimaryColumnValuesArguments.CancellationToken">
            <summary>
            Gets or sets cancellation token.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WritePrimaryColumnValuesArguments.ChunkSize">
            <summary>
            Gets or sets chunk size.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WritePrimaryColumnValuesArguments.MaximumFileSize">
            <summary>
            Gets or sets maximum file size to write.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ServiceModelContract.WritePrimaryColumnValuesResult">
            <summary>
            Represents the result of the writing primary column values.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WritePrimaryColumnValuesResult.WrittenValues">
            <summary>
            Gets or sets number of written values.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ServiceModelContract.WritePrimaryColumnValuesResult.IsAllValuesProcessed">
            <summary>
            Gets or sets value that indicates whether the all values have been written.
            </summary>
        </member>
        <member name="T:Terrasoft.Nui.ServiceModel.DataContract.IQueryProcessExecutionData">
            Indicates that implemented class can request for a process execution data.
        </member>
        <member name="P:Terrasoft.Nui.ServiceModel.DataContract.IQueryProcessExecutionData.IncludeProcessExecutionData">
            <summary>
            Indicates that execution data of process elements, started during executing current query, should be
            included in response.
            </summary>
        </member>
        <member name="P:Terrasoft.Nui.ServiceModel.DataContract.IQueryProcessExecutionData.ForceBackgroundMode">
            <summary>
            Forcibly run processes in background mode.
            </summary>
        </member>
        <member name="P:Terrasoft.Nui.ServiceModel.DataContract.IQueryProcessExecutionData.ProcessExecutionOptions">
            <summary>
            Gets process execution options.
            </summary>
        </member>
    </members>
</doc>
